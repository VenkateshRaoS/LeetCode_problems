class Solution:
    def findMedianSortedArrays(self, nums1, nums2):
        if len(nums1) > len(nums2):  # make sure nums1 is smaller
            nums1, nums2 = nums2, nums1

        m, n = len(nums1), len(nums2)
        low, high = 0, m
        half_len = (m + n + 1) // 2

        while low <= high:
            i = (low + high) // 2
            j = half_len - i

            maxLeftX = float('-inf') if i == 0 else nums1[i-1]
            minRightX = float('inf') if i == m else nums1[i]

            maxLeftY = float('-inf') if j == 0 else nums2[j-1]
            minRightY = float('inf') if j == n else nums2[j]

            if maxLeftX <= minRightY and maxLeftY <= minRightX:
                if (m + n) % 2 == 0:
                    return (max(maxLeftX, maxLeftY) + min(minRightX, minRightY)) / 2.0
                else:
                    return max(maxLeftX, maxLeftY)
            elif maxLeftX > minRightY:
                high = i - 1
            else:
                low = i + 1
